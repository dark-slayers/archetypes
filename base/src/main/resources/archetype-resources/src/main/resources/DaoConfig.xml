<beans
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache.xsd">
	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<!-- 并设置连接数据库的驱动、URL、用户名、密码， 连接池最大连接数、最小连接数、初始连接数等参数 -->
	<bean
		id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close"
		p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="${hibernate.sql_url}?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=true"
		p:user="root"
		p:password="${hibernate.password}"
		p:maxPoolSize="200"
		p:minPoolSize="2"
		p:initialPoolSize="2"
		p:maxIdleTime="20" />
	<!-- 定义Hibernate的SessionFactory，并依赖注入数据源，注入上面定义的dataSource -->
	<bean
		id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<!-- annotatedClasses属性用于列出全部持久化类 -->
		<property name="annotatedClasses">
			<list>
				<!-- 以下用来列出Hibernate的持久化类 -->
				<value>person.liuxx.plm.util.vo.BOMItem</value>
				<value>person.liuxx.plm.util.vo.ItemCompare</value>	
				<value>person.liuxx.plm.util.vo.CompareItem</value>			
			</list>
		</property>
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<!-- 指定数据库方言、是否自动建表、是否生成SQL语句等 -->
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
			</props>
		</property>
	</bean>
	<bean
		id="daoTemplate"
		abstract="true"
		p:sessionFactory-ref="sessionFactory" />
	<bean
		id="bomItemDao"
		class="person.liuxx.plm.util.dao.impl.BOMItemDaoHibernate"
		parent="daoTemplate" />
	<!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 并注入SessionFactory的引用 -->
	<bean
		id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />
	<!-- 配置事务增强处理Bean,指定事务管理器 -->
	<tx:advice
		id="txAdvice"
		transaction-manager="transactionManager">
		<!-- 用于配置详细的事务语义 -->
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 配置一个切入点，所有方法的执行 -->
		<aop:pointcut
			id="larkPointcut"
			expression="execution(* person.liuxx.plm.util.service..*(..))" />
		<!-- 指定在leePointcut切入点应用txAdvice事务增强处理 -->
		<aop:advisor
			advice-ref="txAdvice"
			pointcut-ref="larkPointcut" />
	</aop:config>
	<!-- 添加服务 -->
	<bean
		id="testService"
		class="person.liuxx.plm.util.service.TestService"
		p:bomItemDao-ref="bomItemDao"
		scope="prototype" />
	<context:annotation-config />
	<context:component-scan base-package="person.liuxx.plm.util.dao.impl" />
	<context:component-scan base-package="person.liuxx.plm.util.service" />
</beans>